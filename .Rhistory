cookie <- stringr::str_sub(paste0(
"bcFreeUserPageView=0; webinar130WebinarClosed=true; ",
paste(cookie_jar$full, collapse = "")
), end = -2)
cookie
cookie <- stringr::str_sub(paste0(
"bcFreeUserPageView=0; webinar130WebinarClosed=true; ",
paste(cookie_jar$full, collapse = "")
), end = -3)
cookie
nchar(cookie)
char(cookie_preserve)
nchar(cookie_preserve)
pg <-GET(url="https://www.barchart.com/proxies/core-api/v1/quotes/get",
add_headers(
`accept-encoding` = "gzip, deflate, br",
`accept-language` = "en-US,en;q=0.9",
`cache-control` = "no-cache",
`cookie` = cookie,
#`cookie` = "bcFreeUserPageView=0; webinar130WebinarClosed=true; market=eyJpdiI6IldZbTU2S0xqZStiNk1XY2l4Um5UV2c9PSIsInZhbHVlIjoidHlKWFZQd01UQUpxcXVhVnhaYVNWcGVQZklWYlhmVWVLTC80WUU5eGlnZHAvUm5qUm9maGgrODB0cXFNclJvKyIsIm1hYyI6Ijk5MzFmYTRjMTYyMGY5YTM5MjgxYjZhYjgwMDFmYzA4ODI3ZjI4YmUxOTcyNmI1NDczNzk2NjFjNTNmMjAzNWIifQ%3D%3D; laravel_token=eyJpdiI6IlFPK055RE1IRldjK0RrYmpWb1M2Snc9PSIsInZhbHVlIjoiTktCaGZiQ0NhNUc0aWZ1OG5qUTFvRmtxU1BkNUxySFdYU3dzNE91bzFkMkx3ZW1ZV2F1dGZnMHZyYW14Yi96bUs4aVliT2RiMm1Jc2VZdVJIRmorZnNTdm1qNWJ6Y0gyNExWczJkK25EamgvRE05N1hFRGdCWlRBQnhTZUg0TTN6ZitVTy9SMVFGSFE2ZDI1Ni9uQjc2WjlNdDd6UzE2QldpcjhpeGFJNHVZanptUU13WXpySkVrdVNDTzZoV3R5Qm5MRVp6TGpPeGFKT0dzbHJMMVZINDJtNUZacVliSWRIeU83VXV1bkc4ODlvM1N1QysvSmFucmJHTzViMENleStHbkZOZzYwSzNqTDF6dWdwaEtHWXBTazcxOXlGelJ2eEN3UVJJakJzbnI0Yjk2LzNXR2NUMWxoeDVhNlZ2MUMiLCJtYWMiOiJjYTExZWM5ZmE0MmZjMTVlNzdkZDk2NzkxMWZmMGE2MzFkOTY2MGU1OTg5MzhkYWM3YjQzMTI0ZjFmZjVmODgxIn0%3D; XSRF-TOKEN=eyJpdiI6ImpMNGNJZ2Y1ZnQ5bUM5UzVJRW1vaUE9PSIsInZhbHVlIjoibDBVeXVaKzZqUXc2dmVVVTRFVHd3K0NONlcvTzYrZ2ZwM3dMZWJpQldwMzU3SDlOVSt3RDNsa1dHeGdtaTNpRHd0SDhreldYTzEyelV6SXBNT2hOWGNYakR6djNqdDczb2FoWEtmTWE1LzYxVzR3anRQcGRTMmJCRVpJS1FlUWoiLCJtYWMiOiJmYWZjYjdjMGZjODBkZWJiNGI2OGE5MDQ5MGIyZjc2ZmQ4YzM2ZDk1ZTE4ZTUzMjQzYWE1OTQzOWRiNzZkMTE5In0%3D; laravel_session=eyJpdiI6ImhYTWJ2emdmaEFLdVl5WGs4RGpKU3c9PSIsInZhbHVlIjoib2FkdkQ0cjZaR24zS0grT1dIb1dNSnpERm44b1lhZjRwZE4wWnZUVzFKdXhVaU0vMFBSSnJ0N2Q0T09XdFgyNTI3T3N3QlhXWHY1SnVhQVIwL3VwZllqT2xGUHYvUFdwWXVYMWVJWXlzVHpYM2xab1ZYQm5jcGlUaXlDb2xaRmkiLCJtYWMiOiJhYWRlMmZkZTkwZmQ2YWYwMmJiODE1NjBjNmRlZGRjODFkMDg3OTQ1ZjQ2Yzk3Y2E1MzcxOTg2OTcyMjI3OWU1In0%3D",
`pragma` = "no-cache",
`referer` = "https://www.barchart.com/stocks/highs-lows/highs",
`sec-ch-ua` = '"Not?A_Brand";v="8", "Chromium";v="108", "Google Chrome";v="108"',
`sec-ch-ua-mobile` = "?0",
`sec-ch-ua-platform` = "macOS",
`sec-fetch-dest` = "empty",
`sec-fetch-mode` = "cors",
`sec-fetch-site` = "same-origin",
`user-agent` = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36",
`x-xsrf-token` = "eyJpdiI6ImpMNGNJZ2Y1ZnQ5bUM5UzVJRW1vaUE9PSIsInZhbHVlIjoibDBVeXVaKzZqUXc2dmVVVTRFVHd3K0NONlcvTzYrZ2ZwM3dMZWJpQldwMzU3SDlOVSt3RDNsa1dHeGdtaTNpRHd0SDhreldYTzEyelV6SXBNT2hOWGNYakR6djNqdDczb2FoWEtmTWE1LzYxVzR3anRQcGRTMmJCRVpJS1FlUWoiLCJtYWMiOiJmYWZjYjdjMGZjODBkZWJiNGI2OGE5MDQ5MGIyZjc2ZmQ4YzM2ZDk1ZTE4ZTUzMjQzYWE1OTQzOWRiNzZkMTE5In0="
),
query=list(
lists="stocks.us.new_highs_lows.highs.overall.1y",
fields="symbol,symbolName,lastPrice,priceChange,percentChange,volume,highHits1y,highPercent1y,lowPercent1y,tradeTime,symbolCode,symbolType,hasOptions",
meta="field.shortName,field.type,field.description,lists.lastUpdate",
hasOptions="true",
page="1",
limit="100",
raw="1"
),
verbose()) -> res
data <- content(res, as = "text")
print(data)
res$status_code
cookie
cookie_preserve
pg <-GET(url="https://www.barchart.com/proxies/core-api/v1/quotes/get",
add_headers(
`accept-encoding` = "gzip, deflate, br",
`accept-language` = "en-US,en;q=0.9",
`cache-control` = "no-cache",
`cookie` = cookie,
#`cookie` = "bcFreeUserPageView=0; webinar130WebinarClosed=true; market=eyJpdiI6IldZbTU2S0xqZStiNk1XY2l4Um5UV2c9PSIsInZhbHVlIjoidHlKWFZQd01UQUpxcXVhVnhaYVNWcGVQZklWYlhmVWVLTC80WUU5eGlnZHAvUm5qUm9maGgrODB0cXFNclJvKyIsIm1hYyI6Ijk5MzFmYTRjMTYyMGY5YTM5MjgxYjZhYjgwMDFmYzA4ODI3ZjI4YmUxOTcyNmI1NDczNzk2NjFjNTNmMjAzNWIifQ%3D%3D; laravel_token=eyJpdiI6IlFPK055RE1IRldjK0RrYmpWb1M2Snc9PSIsInZhbHVlIjoiTktCaGZiQ0NhNUc0aWZ1OG5qUTFvRmtxU1BkNUxySFdYU3dzNE91bzFkMkx3ZW1ZV2F1dGZnMHZyYW14Yi96bUs4aVliT2RiMm1Jc2VZdVJIRmorZnNTdm1qNWJ6Y0gyNExWczJkK25EamgvRE05N1hFRGdCWlRBQnhTZUg0TTN6ZitVTy9SMVFGSFE2ZDI1Ni9uQjc2WjlNdDd6UzE2QldpcjhpeGFJNHVZanptUU13WXpySkVrdVNDTzZoV3R5Qm5MRVp6TGpPeGFKT0dzbHJMMVZINDJtNUZacVliSWRIeU83VXV1bkc4ODlvM1N1QysvSmFucmJHTzViMENleStHbkZOZzYwSzNqTDF6dWdwaEtHWXBTazcxOXlGelJ2eEN3UVJJakJzbnI0Yjk2LzNXR2NUMWxoeDVhNlZ2MUMiLCJtYWMiOiJjYTExZWM5ZmE0MmZjMTVlNzdkZDk2NzkxMWZmMGE2MzFkOTY2MGU1OTg5MzhkYWM3YjQzMTI0ZjFmZjVmODgxIn0%3D; XSRF-TOKEN=eyJpdiI6ImpMNGNJZ2Y1ZnQ5bUM5UzVJRW1vaUE9PSIsInZhbHVlIjoibDBVeXVaKzZqUXc2dmVVVTRFVHd3K0NONlcvTzYrZ2ZwM3dMZWJpQldwMzU3SDlOVSt3RDNsa1dHeGdtaTNpRHd0SDhreldYTzEyelV6SXBNT2hOWGNYakR6djNqdDczb2FoWEtmTWE1LzYxVzR3anRQcGRTMmJCRVpJS1FlUWoiLCJtYWMiOiJmYWZjYjdjMGZjODBkZWJiNGI2OGE5MDQ5MGIyZjc2ZmQ4YzM2ZDk1ZTE4ZTUzMjQzYWE1OTQzOWRiNzZkMTE5In0%3D; laravel_session=eyJpdiI6ImhYTWJ2emdmaEFLdVl5WGs4RGpKU3c9PSIsInZhbHVlIjoib2FkdkQ0cjZaR24zS0grT1dIb1dNSnpERm44b1lhZjRwZE4wWnZUVzFKdXhVaU0vMFBSSnJ0N2Q0T09XdFgyNTI3T3N3QlhXWHY1SnVhQVIwL3VwZllqT2xGUHYvUFdwWXVYMWVJWXlzVHpYM2xab1ZYQm5jcGlUaXlDb2xaRmkiLCJtYWMiOiJhYWRlMmZkZTkwZmQ2YWYwMmJiODE1NjBjNmRlZGRjODFkMDg3OTQ1ZjQ2Yzk3Y2E1MzcxOTg2OTcyMjI3OWU1In0%3D",
`pragma` = "no-cache",
`referer` = "https://www.barchart.com/stocks/highs-lows/highs",
`sec-ch-ua` = '"Not?A_Brand";v="8", "Chromium";v="108", "Google Chrome";v="108"',
`sec-ch-ua-mobile` = "?0",
`sec-ch-ua-platform` = "macOS",
`sec-fetch-dest` = "empty",
`sec-fetch-mode` = "cors",
`sec-fetch-site` = "same-origin",
`user-agent` = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
),
query=list(
lists="stocks.us.new_highs_lows.highs.overall.1y",
fields="symbol,symbolName,lastPrice,priceChange,percentChange,volume,highHits1y,highPercent1y,lowPercent1y,tradeTime,symbolCode,symbolType,hasOptions",
meta="field.shortName,field.type,field.description,lists.lastUpdate",
hasOptions="true",
page="1",
limit="100",
raw="1"
),
verbose()) -> res
data <- content(res, as = "text")
print(data)
pg <-GET(url="https://www.barchart.com/proxies/core-api/v1/quotes/get",
add_headers(
`accept-encoding` = "gzip, deflate, br",
`accept-language` = "en-US,en;q=0.9",
`cache-control` = "no-cache",
`cookie` = cookie,
`cookie` = "bcFreeUserPageView=0; webinar130WebinarClosed=true; market=eyJpdiI6IldZbTU2S0xqZStiNk1XY2l4Um5UV2c9PSIsInZhbHVlIjoidHlKWFZQd01UQUpxcXVhVnhaYVNWcGVQZklWYlhmVWVLTC80WUU5eGlnZHAvUm5qUm9maGgrODB0cXFNclJvKyIsIm1hYyI6Ijk5MzFmYTRjMTYyMGY5YTM5MjgxYjZhYjgwMDFmYzA4ODI3ZjI4YmUxOTcyNmI1NDczNzk2NjFjNTNmMjAzNWIifQ%3D%3D; laravel_token=eyJpdiI6IlFPK055RE1IRldjK0RrYmpWb1M2Snc9PSIsInZhbHVlIjoiTktCaGZiQ0NhNUc0aWZ1OG5qUTFvRmtxU1BkNUxySFdYU3dzNE91bzFkMkx3ZW1ZV2F1dGZnMHZyYW14Yi96bUs4aVliT2RiMm1Jc2VZdVJIRmorZnNTdm1qNWJ6Y0gyNExWczJkK25EamgvRE05N1hFRGdCWlRBQnhTZUg0TTN6ZitVTy9SMVFGSFE2ZDI1Ni9uQjc2WjlNdDd6UzE2QldpcjhpeGFJNHVZanptUU13WXpySkVrdVNDTzZoV3R5Qm5MRVp6TGpPeGFKT0dzbHJMMVZINDJtNUZacVliSWRIeU83VXV1bkc4ODlvM1N1QysvSmFucmJHTzViMENleStHbkZOZzYwSzNqTDF6dWdwaEtHWXBTazcxOXlGelJ2eEN3UVJJakJzbnI0Yjk2LzNXR2NUMWxoeDVhNlZ2MUMiLCJtYWMiOiJjYTExZWM5ZmE0MmZjMTVlNzdkZDk2NzkxMWZmMGE2MzFkOTY2MGU1OTg5MzhkYWM3YjQzMTI0ZjFmZjVmODgxIn0%3D; XSRF-TOKEN=eyJpdiI6ImpMNGNJZ2Y1ZnQ5bUM5UzVJRW1vaUE9PSIsInZhbHVlIjoibDBVeXVaKzZqUXc2dmVVVTRFVHd3K0NONlcvTzYrZ2ZwM3dMZWJpQldwMzU3SDlOVSt3RDNsa1dHeGdtaTNpRHd0SDhreldYTzEyelV6SXBNT2hOWGNYakR6djNqdDczb2FoWEtmTWE1LzYxVzR3anRQcGRTMmJCRVpJS1FlUWoiLCJtYWMiOiJmYWZjYjdjMGZjODBkZWJiNGI2OGE5MDQ5MGIyZjc2ZmQ4YzM2ZDk1ZTE4ZTUzMjQzYWE1OTQzOWRiNzZkMTE5In0%3D; laravel_session=eyJpdiI6ImhYTWJ2emdmaEFLdVl5WGs4RGpKU3c9PSIsInZhbHVlIjoib2FkdkQ0cjZaR24zS0grT1dIb1dNSnpERm44b1lhZjRwZE4wWnZUVzFKdXhVaU0vMFBSSnJ0N2Q0T09XdFgyNTI3T3N3QlhXWHY1SnVhQVIwL3VwZllqT2xGUHYvUFdwWXVYMWVJWXlzVHpYM2xab1ZYQm5jcGlUaXlDb2xaRmkiLCJtYWMiOiJhYWRlMmZkZTkwZmQ2YWYwMmJiODE1NjBjNmRlZGRjODFkMDg3OTQ1ZjQ2Yzk3Y2E1MzcxOTg2OTcyMjI3OWU1In0%3D",
`pragma` = "no-cache",
`referer` = "https://www.barchart.com/stocks/highs-lows/highs",
`sec-ch-ua` = '"Not?A_Brand";v="8", "Chromium";v="108", "Google Chrome";v="108"',
`sec-ch-ua-mobile` = "?0",
`sec-ch-ua-platform` = "macOS",
`sec-fetch-dest` = "empty",
`sec-fetch-mode` = "cors",
`sec-fetch-site` = "same-origin",
`user-agent` = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36",
`x-xsrf-token` = "eyJpdiI6ImpMNGNJZ2Y1ZnQ5bUM5UzVJRW1vaUE9PSIsInZhbHVlIjoibDBVeXVaKzZqUXc2dmVVVTRFVHd3K0NONlcvTzYrZ2ZwM3dMZWJpQldwMzU3SDlOVSt3RDNsa1dHeGdtaTNpRHd0SDhreldYTzEyelV6SXBNT2hOWGNYakR6djNqdDczb2FoWEtmTWE1LzYxVzR3anRQcGRTMmJCRVpJS1FlUWoiLCJtYWMiOiJmYWZjYjdjMGZjODBkZWJiNGI2OGE5MDQ5MGIyZjc2ZmQ4YzM2ZDk1ZTE4ZTUzMjQzYWE1OTQzOWRiNzZkMTE5In0="
),
query=list(
lists="stocks.us.new_highs_lows.highs.overall.1y",
fields="symbol,symbolName,lastPrice,priceChange,percentChange,volume,highHits1y,highPercent1y,lowPercent1y,tradeTime,symbolCode,symbolType,hasOptions",
meta="field.shortName,field.type,field.description,lists.lastUpdate",
hasOptions="true",
page="1",
limit="100",
raw="1"
),
verbose()) -> res
data <- content(res, as = "text")
print(data)
cookie
s$cache
s$config
s$forward
s$response
s$response$all_headers
cookies <- s$response$cookies
View(cookies)
cookie
cookie_pre
cookie_preserve
cookie
pg <-GET(url="https://www.barchart.com/proxies/core-api/v1/quotes/get",
add_headers(
`accept-encoding` = "gzip, deflate, br",
`accept-language` = "en-US,en;q=0.9",
`cache-control` = "no-cache",
`cookie` = cookie_preserve,
#`cookie` = "bcFreeUserPageView=0; webinar130WebinarClosed=true; market=eyJpdiI6IldZbTU2S0xqZStiNk1XY2l4Um5UV2c9PSIsInZhbHVlIjoidHlKWFZQd01UQUpxcXVhVnhaYVNWcGVQZklWYlhmVWVLTC80WUU5eGlnZHAvUm5qUm9maGgrODB0cXFNclJvKyIsIm1hYyI6Ijk5MzFmYTRjMTYyMGY5YTM5MjgxYjZhYjgwMDFmYzA4ODI3ZjI4YmUxOTcyNmI1NDczNzk2NjFjNTNmMjAzNWIifQ%3D%3D; laravel_token=eyJpdiI6IlFPK055RE1IRldjK0RrYmpWb1M2Snc9PSIsInZhbHVlIjoiTktCaGZiQ0NhNUc0aWZ1OG5qUTFvRmtxU1BkNUxySFdYU3dzNE91bzFkMkx3ZW1ZV2F1dGZnMHZyYW14Yi96bUs4aVliT2RiMm1Jc2VZdVJIRmorZnNTdm1qNWJ6Y0gyNExWczJkK25EamgvRE05N1hFRGdCWlRBQnhTZUg0TTN6ZitVTy9SMVFGSFE2ZDI1Ni9uQjc2WjlNdDd6UzE2QldpcjhpeGFJNHVZanptUU13WXpySkVrdVNDTzZoV3R5Qm5MRVp6TGpPeGFKT0dzbHJMMVZINDJtNUZacVliSWRIeU83VXV1bkc4ODlvM1N1QysvSmFucmJHTzViMENleStHbkZOZzYwSzNqTDF6dWdwaEtHWXBTazcxOXlGelJ2eEN3UVJJakJzbnI0Yjk2LzNXR2NUMWxoeDVhNlZ2MUMiLCJtYWMiOiJjYTExZWM5ZmE0MmZjMTVlNzdkZDk2NzkxMWZmMGE2MzFkOTY2MGU1OTg5MzhkYWM3YjQzMTI0ZjFmZjVmODgxIn0%3D; XSRF-TOKEN=eyJpdiI6ImpMNGNJZ2Y1ZnQ5bUM5UzVJRW1vaUE9PSIsInZhbHVlIjoibDBVeXVaKzZqUXc2dmVVVTRFVHd3K0NONlcvTzYrZ2ZwM3dMZWJpQldwMzU3SDlOVSt3RDNsa1dHeGdtaTNpRHd0SDhreldYTzEyelV6SXBNT2hOWGNYakR6djNqdDczb2FoWEtmTWE1LzYxVzR3anRQcGRTMmJCRVpJS1FlUWoiLCJtYWMiOiJmYWZjYjdjMGZjODBkZWJiNGI2OGE5MDQ5MGIyZjc2ZmQ4YzM2ZDk1ZTE4ZTUzMjQzYWE1OTQzOWRiNzZkMTE5In0%3D; laravel_session=eyJpdiI6ImhYTWJ2emdmaEFLdVl5WGs4RGpKU3c9PSIsInZhbHVlIjoib2FkdkQ0cjZaR24zS0grT1dIb1dNSnpERm44b1lhZjRwZE4wWnZUVzFKdXhVaU0vMFBSSnJ0N2Q0T09XdFgyNTI3T3N3QlhXWHY1SnVhQVIwL3VwZllqT2xGUHYvUFdwWXVYMWVJWXlzVHpYM2xab1ZYQm5jcGlUaXlDb2xaRmkiLCJtYWMiOiJhYWRlMmZkZTkwZmQ2YWYwMmJiODE1NjBjNmRlZGRjODFkMDg3OTQ1ZjQ2Yzk3Y2E1MzcxOTg2OTcyMjI3OWU1In0%3D",
`pragma` = "no-cache",
`referer` = "https://www.barchart.com/stocks/highs-lows/highs",
`sec-ch-ua` = '"Not?A_Brand";v="8", "Chromium";v="108", "Google Chrome";v="108"',
`sec-ch-ua-mobile` = "?0",
`sec-ch-ua-platform` = "macOS",
`sec-fetch-dest` = "empty",
`sec-fetch-mode` = "cors",
`sec-fetch-site` = "same-origin",
`user-agent` = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36",
`x-xsrf-token` = "eyJpdiI6ImpMNGNJZ2Y1ZnQ5bUM5UzVJRW1vaUE9PSIsInZhbHVlIjoibDBVeXVaKzZqUXc2dmVVVTRFVHd3K0NONlcvTzYrZ2ZwM3dMZWJpQldwMzU3SDlOVSt3RDNsa1dHeGdtaTNpRHd0SDhreldYTzEyelV6SXBNT2hOWGNYakR6djNqdDczb2FoWEtmTWE1LzYxVzR3anRQcGRTMmJCRVpJS1FlUWoiLCJtYWMiOiJmYWZjYjdjMGZjODBkZWJiNGI2OGE5MDQ5MGIyZjc2ZmQ4YzM2ZDk1ZTE4ZTUzMjQzYWE1OTQzOWRiNzZkMTE5In0="
),
query=list(
lists="stocks.us.new_highs_lows.highs.overall.1y",
fields="symbol,symbolName,lastPrice,priceChange,percentChange,volume,highHits1y,highPercent1y,lowPercent1y,tradeTime,symbolCode,symbolType,hasOptions",
meta="field.shortName,field.type,field.description,lists.lastUpdate",
hasOptions="true",
page="1",
limit="100",
raw="1"
),
verbose()) -> res
data <- content(res, as = "text")
print(data)
parsed <- content(res, as = "parsed")
s <- session("https://www.barchart.com/stocks/highs-lows/highs")
cookies <- s$response$cookies
token <- URLdecode(dplyr::recode("XSRF-TOKEN",
!!!setNames(cookies$value,
cookies$name)))
cookie <- "bcFreeUserPageView=0; webinar130WebinarClosed=true; market=eyJpdiI6IldZbTU2S0xqZStiNk1XY2l4Um5UV2c9PSIsInZhbHVlIjoidHlKWFZQd01UQUpxcXVhVnhaYVNWcGVQZklWYlhmVWVLTC80WUU5eGlnZHAvUm5qUm9maGgrODB0cXFNclJvKyIsIm1hYyI6Ijk5MzFmYTRjMTYyMGY5YTM5MjgxYjZhYjgwMDFmYzA4ODI3ZjI4YmUxOTcyNmI1NDczNzk2NjFjNTNmMjAzNWIifQ%3D%3D; laravel_token=eyJpdiI6IlFPK055RE1IRldjK0RrYmpWb1M2Snc9PSIsInZhbHVlIjoiTktCaGZiQ0NhNUc0aWZ1OG5qUTFvRmtxU1BkNUxySFdYU3dzNE91bzFkMkx3ZW1ZV2F1dGZnMHZyYW14Yi96bUs4aVliT2RiMm1Jc2VZdVJIRmorZnNTdm1qNWJ6Y0gyNExWczJkK25EamgvRE05N1hFRGdCWlRBQnhTZUg0TTN6ZitVTy9SMVFGSFE2ZDI1Ni9uQjc2WjlNdDd6UzE2QldpcjhpeGFJNHVZanptUU13WXpySkVrdVNDTzZoV3R5Qm5MRVp6TGpPeGFKT0dzbHJMMVZINDJtNUZacVliSWRIeU83VXV1bkc4ODlvM1N1QysvSmFucmJHTzViMENleStHbkZOZzYwSzNqTDF6dWdwaEtHWXBTazcxOXlGelJ2eEN3UVJJakJzbnI0Yjk2LzNXR2NUMWxoeDVhNlZ2MUMiLCJtYWMiOiJjYTExZWM5ZmE0MmZjMTVlNzdkZDk2NzkxMWZmMGE2MzFkOTY2MGU1OTg5MzhkYWM3YjQzMTI0ZjFmZjVmODgxIn0%3D; XSRF-TOKEN=eyJpdiI6ImpMNGNJZ2Y1ZnQ5bUM5UzVJRW1vaUE9PSIsInZhbHVlIjoibDBVeXVaKzZqUXc2dmVVVTRFVHd3K0NONlcvTzYrZ2ZwM3dMZWJpQldwMzU3SDlOVSt3RDNsa1dHeGdtaTNpRHd0SDhreldYTzEyelV6SXBNT2hOWGNYakR6djNqdDczb2FoWEtmTWE1LzYxVzR3anRQcGRTMmJCRVpJS1FlUWoiLCJtYWMiOiJmYWZjYjdjMGZjODBkZWJiNGI2OGE5MDQ5MGIyZjc2ZmQ4YzM2ZDk1ZTE4ZTUzMjQzYWE1OTQzOWRiNzZkMTE5In0%3D; laravel_session=eyJpdiI6ImhYTWJ2emdmaEFLdVl5WGs4RGpKU3c9PSIsInZhbHVlIjoib2FkdkQ0cjZaR24zS0grT1dIb1dNSnpERm44b1lhZjRwZE4wWnZUVzFKdXhVaU0vMFBSSnJ0N2Q0T09XdFgyNTI3T3N3QlhXWHY1SnVhQVIwL3VwZllqT2xGUHYvUFdwWXVYMWVJWXlzVHpYM2xab1ZYQm5jcGlUaXlDb2xaRmkiLCJtYWMiOiJhYWRlMmZkZTkwZmQ2YWYwMmJiODE1NjBjNmRlZGRjODFkMDg3OTQ1ZjQ2Yzk3Y2E1MzcxOTg2OTcyMjI3OWU1In0%3D"
pg <-GET(url="https://www.barchart.com/proxies/core-api/v1/quotes/get",
add_headers(
`accept-encoding` = "gzip, deflate, br",
`accept-language` = "en-US,en;q=0.9",
`cache-control` = "no-cache",
`cookie` = cookie,
`pragma` = "no-cache",
`referer` = "https://www.barchart.com/stocks/highs-lows/highs",
`sec-ch-ua` = '"Not?A_Brand";v="8", "Chromium";v="108", "Google Chrome";v="108"',
`sec-ch-ua-mobile` = "?0",
`sec-ch-ua-platform` = "macOS",
`sec-fetch-dest` = "empty",
`sec-fetch-mode` = "cors",
`sec-fetch-site` = "same-origin",
`user-agent` = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36",
`x-xsrf-token` = "eyJpdiI6ImpMNGNJZ2Y1ZnQ5bUM5UzVJRW1vaUE9PSIsInZhbHVlIjoibDBVeXVaKzZqUXc2dmVVVTRFVHd3K0NONlcvTzYrZ2ZwM3dMZWJpQldwMzU3SDlOVSt3RDNsa1dHeGdtaTNpRHd0SDhreldYTzEyelV6SXBNT2hOWGNYakR6djNqdDczb2FoWEtmTWE1LzYxVzR3anRQcGRTMmJCRVpJS1FlUWoiLCJtYWMiOiJmYWZjYjdjMGZjODBkZWJiNGI2OGE5MDQ5MGIyZjc2ZmQ4YzM2ZDk1ZTE4ZTUzMjQzYWE1OTQzOWRiNzZkMTE5In0="
),
query=list(
lists="stocks.us.new_highs_lows.highs.overall.1y",
fields="symbol,symbolName,lastPrice,priceChange,percentChange,volume,highHits1y,highPercent1y,lowPercent1y,tradeTime,symbolCode,symbolType,hasOptions",
meta="field.shortName,field.type,field.description,lists.lastUpdate",
hasOptions="true",
page="1",
limit="100",
raw="1"
),
verbose()) -> res
data <- content(res, as = "text")
print(data)
library(httr)
library(rvest)
library(dplyr)
s <- session("https://www.barchart.com/stocks/highs-lows/highs")
cookies <- s$response$cookies
token <- URLdecode(dplyr::recode("XSRF-TOKEN",
!!!setNames(cookies$value,
cookies$name)))
# go in your browser dev tools/inspect
# go to the 'Network' tab and look for the file in the screenshot below
# copy your very long cookie string here
cookie <- "bcFreeUserPageView=0; webinar130WebinarClosed=true; market=eyJpdiI6IldZbTU2S0xqZStiNk1XY2l4Um5UV2c9PSIsInZhbHVlIjoidHlKWFZQd01UQUpxcXVhVnhaYVNWcGVQZklWYlhmVWVLTC80WUU5eGlnZHAvUm5qUm9maGgrODB0cXFNclJvKyIsIm1hYyI6Ijk5MzFmYTRjMTYyMGY5YTM5MjgxYjZhYjgwMDFmYzA4ODI3ZjI4YmUxOTcyNmI1NDczNzk2NjFjNTNmMjAzNWIifQ%3D%3D; laravel_token=eyJpdiI6IlFPK055RE1IRldjK0RrYmpWb1M2Snc9PSIsInZhbHVlIjoiTktCaGZiQ0NhNUc0aWZ1OG5qUTFvRmtxU1BkNUxySFdYU3dzNE91bzFkMkx3ZW1ZV2F1dGZnMHZyYW14Yi96bUs4aVliT2RiMm1Jc2VZdVJIRmorZnNTdm1qNWJ6Y0gyNExWczJkK25EamgvRE05N1hFRGdCWlRBQnhTZUg0TTN6ZitVTy9SMVFGSFE2ZDI1Ni9uQjc2WjlNdDd6UzE2QldpcjhpeGFJNHVZanptUU13WXpySkVrdVNDTzZoV3R5Qm5MRVp6TGpPeGFKT0dzbHJMMVZINDJtNUZacVliSWRIeU83VXV1bkc4ODlvM1N1QysvSmFucmJHTzViMENleStHbkZOZzYwSzNqTDF6dWdwaEtHWXBTazcxOXlGelJ2eEN3UVJJakJzbnI0Yjk2LzNXR2NUMWxoeDVhNlZ2MUMiLCJtYWMiOiJjYTExZWM5ZmE0MmZjMTVlNzdkZDk2NzkxMWZmMGE2MzFkOTY2MGU1OTg5MzhkYWM3YjQzMTI0ZjFmZjVmODgxIn0%3D; XSRF-TOKEN=eyJpdiI6ImpMNGNJZ2Y1ZnQ5bUM5UzVJRW1vaUE9PSIsInZhbHVlIjoibDBVeXVaKzZqUXc2dmVVVTRFVHd3K0NONlcvTzYrZ2ZwM3dMZWJpQldwMzU3SDlOVSt3RDNsa1dHeGdtaTNpRHd0SDhreldYTzEyelV6SXBNT2hOWGNYakR6djNqdDczb2FoWEtmTWE1LzYxVzR3anRQcGRTMmJCRVpJS1FlUWoiLCJtYWMiOiJmYWZjYjdjMGZjODBkZWJiNGI2OGE5MDQ5MGIyZjc2ZmQ4YzM2ZDk1ZTE4ZTUzMjQzYWE1OTQzOWRiNzZkMTE5In0%3D; laravel_session=eyJpdiI6ImhYTWJ2emdmaEFLdVl5WGs4RGpKU3c9PSIsInZhbHVlIjoib2FkdkQ0cjZaR24zS0grT1dIb1dNSnpERm44b1lhZjRwZE4wWnZUVzFKdXhVaU0vMFBSSnJ0N2Q0T09XdFgyNTI3T3N3QlhXWHY1SnVhQVIwL3VwZllqT2xGUHYvUFdwWXVYMWVJWXlzVHpYM2xab1ZYQm5jcGlUaXlDb2xaRmkiLCJtYWMiOiJhYWRlMmZkZTkwZmQ2YWYwMmJiODE1NjBjNmRlZGRjODFkMDg3OTQ1ZjQ2Yzk3Y2E1MzcxOTg2OTcyMjI3OWU1In0%3D"
pg <-GET(url="https://www.barchart.com/proxies/core-api/v1/quotes/get",
add_headers(
`accept-encoding` = "gzip, deflate, br",
`accept-language` = "en-US,en;q=0.9",
`cache-control` = "no-cache",
`cookie` = cookie,
`pragma` = "no-cache",
`referer` = "https://www.barchart.com/stocks/highs-lows/highs",
`sec-ch-ua` = '"Not?A_Brand";v="8", "Chromium";v="108", "Google Chrome";v="108"',
`sec-ch-ua-mobile` = "?0",
`sec-ch-ua-platform` = "macOS",
`sec-fetch-dest` = "empty",
`sec-fetch-mode` = "cors",
`sec-fetch-site` = "same-origin",
`user-agent` = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36",
`x-xsrf-token` = "eyJpdiI6ImpMNGNJZ2Y1ZnQ5bUM5UzVJRW1vaUE9PSIsInZhbHVlIjoibDBVeXVaKzZqUXc2dmVVVTRFVHd3K0NONlcvTzYrZ2ZwM3dMZWJpQldwMzU3SDlOVSt3RDNsa1dHeGdtaTNpRHd0SDhreldYTzEyelV6SXBNT2hOWGNYakR6djNqdDczb2FoWEtmTWE1LzYxVzR3anRQcGRTMmJCRVpJS1FlUWoiLCJtYWMiOiJmYWZjYjdjMGZjODBkZWJiNGI2OGE5MDQ5MGIyZjc2ZmQ4YzM2ZDk1ZTE4ZTUzMjQzYWE1OTQzOWRiNzZkMTE5In0="
),
query=list(
lists="stocks.us.new_highs_lows.highs.overall.1y",
fields="symbol,symbolName,lastPrice,priceChange,percentChange,volume,highHits1y,highPercent1y,lowPercent1y,tradeTime,symbolCode,symbolType,hasOptions",
meta="field.shortName,field.type,field.description,lists.lastUpdate",
hasOptions="true",
page="1",
limit="100",
raw="1"
),
verbose()) -> res
data <- content(res, as = "text")
print(data)
parsed <- content(res, as = "parsed")
purrr::map(parsed$data, function(el) {
purrr::map_df(el$raw, function(data) {
return(data)
})
}) %>%
bind_rows()
rvest::rvest()
reprex::reprex()
res$status_code
library(dplyr)
# Create a sample dataframe
df <- data.frame(
student = c("A", "A", "A","B","B", "B", "C", "C","C"),
grade = c(1, 2, 3, 1, 2, 3, 1, 2, 3),
age= c(NA, 6, 6, 7, 7, 7, NA, NA, 9)
)
df
df %>%
group_by(student) %>%
mutate(age = ifelse(is.na(age), age + 1, age))
df %>%
group_by(student) %>%
mutate(tmp = row_number(),
age = ifelse(is.na(age), age + 1, age))
df %>%
group_by(student) %>%
mutate(tmp = row_number(),
age = ifelse(is.na(age), age, age))
df %>%
group_by(student) %>%
mutate(tmp = row_number(),
age = ifelse(is.na(age), lag(age) + 1, age))
df %>%
group_by(student) %>%
mutate(age = ifelse(is.na(age), lag(age) + 1, age))
df %>%
pivot_longer(-student)
df %>%
tidyr::pivot_longer(-student)
df %>%
group_by(student)
df %>%
group_by(student) %>%
mutate(inc = row_number() - 1)
df %>%
group_by(student) %>%
mutate(age = row_number() - 1)
mutate(age = ifelse(is.na(age), row_number() - 1, age)
df %>%
df %>%
group_by(student) %>%
mutate(age = ifelse(is.na(age), row_number() - 1, age))
inc
df %>%
group_by(student) %>%
mutate(inc = row_number() - 1)
df %>%
group_by(student) %>%
mutate(inc = row_number() - 1,
age = ifelse(is.na(age), age + inc, age))
df %>%
group_by(student) %>%
mutate(inc = row_number() - 1) %>%
ungroup() %>%
mutate(age = ifelse(is.na(age), age + inc, age))
df %>%
group_by(student) %>%
mutate(inc = row_number() - 1) %>%
ungroup() %>%
mutate(age = ifelse(!is.na(age), age + inc, age))
df %>%
group_by(student) %>%
mutate(inc = row_number() - 1) %>%
ungroup()
df %>%
group_by(student) %>%
mutate(inc = row_number() - 1) %>%
ungroup() %>%
mutate(age = ifelse(!is.na(age), age + inc, age))
df %>%
group_by(student)
df %>%
split(.$student)
library(dplyr)
df <- data.frame ("district"= rep(c("ARA", "BJI", "CMC"), each=3),
"quarter"=rep(1:3,3),
"incoming"= c(4044, 2992, 2556, 1639, 9547, 1191,2038,1942,225),
"stock"= c(19547,3160, 1533,5355,6146,355,5816,1119,333)
)
df
basea <- df %>%
group_by(district) %>%
filter(quarter==3) %>% #take only the last quarter
summarise(across(stock, sum))
baseb <- df %>%
group_by(district) %>%
summarise(across(incoming, sum))
final <- full_join(basea, baseb)
final
aggregate_stocks <- function(df, n_quarter) {
basea <- df %>%
group_by(district) %>%
filter(quarter == n_quarter) %>%
summarise(across(stock, sum))
baseb <- df %>%
group_by(district) %>%
summarise(across(incoming, sum))
final <- full_join(basea, baseb)
return(final)
}
aggregate_stocks(df, 3)
aggregate_stocks <- function(df, n_quarter) {
basea <- df %>%
group_by(district) %>%
filter(quarter == n_quarter) %>%
summarise(across(stock, sum))
baseb <- df %>%
group_by(district) %>%
summarise(across(incoming, sum))
final <- full_join(basea, baseb, by = "district")
return(final)
}
aggregate_stocks(df, 3)
aggregate_stocks <- function(df, n_quarter) {
base <- df %>%
group_by(district)
basea <- base %>%
filter(quarter == n_quarter) %>%
summarise(across(stock, sum))
baseb <- base %>%
summarise(across(incoming, sum))
final <- full_join(basea, baseb, by = "district")
return(final)
}
aggregate_stocks(df, 3)
reprex::reprex()
library(dplyr)
library(rvest)
# Get URL
url = "https://en.wikipedia.org/wiki/List_of_towns_and_cities_with_100,000_or_more_inhabitants/country:_A-B"
# Get URL
url = "https://en.wikipedia.org/wiki/List_of_towns_and_cities_with_100,000_or_more_inhabitants/country:_A-B"
# Read the HTML code from the website
webpage = read_html(url)
# Get name of country for the first table
# For some reason I can get Aghanistan but when I use the selector for Albania I still get Aghanistan
countries = webpage %>% html_node(".mw-headline") %>% html_text()
# Get cities for that country
# Still working on this since I can't grab the information as of yet
table = html_nodes(webpage,'td')
# Get links for the cities, currently picks the main domain instead of the city
# Can I add a clause before the html node to indicate I want the href from "wikitable sortable jquery-tablesorter"?
links = webpage %>% html_node("href") %>% html_text()
# Converting the table to a tibble
table  = html_table(table, header = TRUE) %>% as_tibble()
# Read the HTML code from the website
webpage = read_html(url)
webpage$node
webpage %>% html_elements('td')
webpage %>% html_elements(c('span', 'td'))
webpage %>% html_elements(c('span', 'th', 'td'))
webpage %>% html_node(".mw-headline") %>% html_text()
webpage %>% html_nodes(".mw-headline") %>% html_text()
# Get name of country for the first table
# For some reason I can get Aghanistan but when I use the selector for Albania I still get Aghanistan
countries = webpage %>% html_nodes("table.wikitable") %>% html_text()
webpage %>% html_nodes("table.wikitable") %>% html_text()
# Get name of country for the first table
# For some reason I can get Aghanistan but when I use the selector for Albania I still get Aghanistan
countries = webpage %>% html_nodes("table.wikitable") %>% html_table()
countries
View(countries)
countries[[1]]
# Get links for the cities, currently picks the main domain instead of the city
# Can I add a clause before the html node to indicate I want the href from "wikitable sortable jquery-tablesorter"?
links = webpage %>% html_node("href") %>% html_text()
webpage %>% html_nodes('href')
library(dplyr)
library(rvest)
# Get URL
url = "https://en.wikipedia.org/wiki/List_of_towns_and_cities_with_100,000_or_more_inhabitants/country:_A-B"
# Read the HTML code from the website
webpage = read_html(url)
# Get name of country for the first table
# For some reason I can get Aghanistan but when I use the selector for Albania I still get Aghanistan
countries = webpage %>% html_nodes("table.wikitable") %>% html_table()
# Get name of country for the first table
# For some reason I can get Aghanistan but when I use the selector for Albania I still get Aghanistan
countries <- webpage %>%
html_nodes("table.wikitable") %>%
html_table()
countries
bind_rows(countries)
countries
urls <- webpage %>%
html_nodes("table.wikitable") %>%
html_attrs("href")
urls <- webpage %>%
html_nodes("table.wikitable") %>%
html_attr("href")
urls
urls <- webpage %>%
html_nodes("table.wikitable") %>%
map(~html_attr('href'))
urls <- webpage %>%
html_nodes("table.wikitable") %>%
purrr::map(~html_attr('href'))
webpage %>%
html_nodes("a")
webpage %>%
html_nodes("table.wikitable") %>%
html_nodes("a")
webpage %>%
html_nodes("table.wikitable") %>%
html_nodes("a") %>%
html_attr('title')
webpage %>%
html_nodes("table.wikitable") %>%
html_nodes("a")
webpage %>%
html_nodes("table.wikitable") %>%
html_nodes("a") %>%
html_attrs(c('href', 'title'))
webpage %>%
html_nodes("table.wikitable") %>%
html_nodes("a") %>%
html_attr('href')
webpage %>%
html_nodes("table.wikitable") %>%
html_nodes("a title") %>%
html_attr('href')
webpage %>%
html_nodes("href table.wikitable")
webpage %>%
html_nodes("table.wikitable")
webpage %>%
html_nodes("table.wikitable") %>%
html_attr("a")
webpage %>%
html_nodes("table.wikitable") %>%
html_attr("href")
webpage %>%
html_nodes("table.wikitable") %>%
html_nodes("a") %>%
html_attr('href')
webpage %>%
html_nodes("table.wikitable") %>%
html_nodes("a") %>%
html_attr('href') %>%
html_table
webpage %>%
html_nodes("table.wikitable") %>%
html_nodes("a") %>%
html_attr('href') %>%
html_table()
webpage %>%
html_nodes("table.wikitable") %>%
html_nodes("a") %>%
html_attr('href') %>%
html_text()
webpage %>%
html_nodes("table.wikitable") %>%
html_nodes("a") %>%
html_attr('href')
x <- webpage %>%
html_nodes("table.wikitable") %>%
html_nodes("a") %>%
html_attr('href')
x <- webpage %>%
html_nodes("table.wikitable") %>%
html_nodes("a") %>%
html_attr('href') %>%
as_tibble()
View(x)
rm(list=ls())
devtools::install_github('mattroumaya/jdenticon')
devtools::install_github("mattroumaya/jdenticon")
install.packages('shiny')
install.packages('teal.slice')
shiny::runApp('Documents/Matt/Upwork/teal_slice/tealSliceExample')
setwd("~/Documents/Matt/Upwork/bloom/bloomR")
usethis::create_package()
usethis::create_package(".")
here::dr_here()
here::here()
usethis::create_package()
usethis::create_package(here::here())
